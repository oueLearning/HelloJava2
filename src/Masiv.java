/**
 * Created by Kalantaev Alexandr on 20.04.2016.
 */
public class Masiv {
    public static void main(String[] args) {
        // масив это набор элементов одного типа
        //с произвольным доступом

        //при обьявлении масива мы указываем тип данных
        //и резервируем имя переменной (имя ссылки) по которому будем производить обращение к нему(к памяти)

        int[] masivIntov; //масив интов
        String[] masivStringov; // масив стрингов
        Masiv[] masivObjektov; // масив обьектов класса Masiv

        // масив это структура данных с фиксированным размером
        //по этому при инициализации масива необходимо указать его размер
        //при чем после создания масива(инициализации) его размер изменить не возможно

        masivIntov = new int[4];
        //ссылке masivIntov был присвоен участок памяти в котором можно разместить 4 элемента типа int
        // если рассматривать более подробно то один int занимает 4 байта
        // и ссылке был присвоен участок памяти размером 4(элемента)*4(байта)=16 байтов или 16*8=128 битов

        // по умолчанию значения элементов масива заполняются значениями по умолчанию для конкретного типа данных.
        //для int значение по умолчанию равно 0
        //т.е. после инициализации переменной мы получили
        //масив (участок памяти) на 4 элемента и эти элементы равны 0
        // [0,0,0,0]
        // доступ к элементам масива осуществляеться по индексу указанному в квадратных скобках после имени переменной
        //индексация начинается с нуля
        //т.е. к элементам данного масива можно обратиться используя индексы 0,1,2,3  (всего 4 индекса как и элементов масива)
        System.out.println(masivIntov[1]);//пример, мы обращаемся к элементу масива с индексом 1, т.е. ко второму элементу
        //или по другому, мы обращаемся к участку памятм которая размещена по ссылке masivIntov(к началу этой памяти),
        //jvm знает что при обьявлении данной ссылке мы указали что там будут хранится тип данных int который занимает в памяте 4 байта
        //по этому значение элемента с индексом 1 будет находиться между 4 и 9 байтами (5,6,7,8) памяти выделеной для масива
        // jvm считывает данные байты и передает их на обработку методу println() который выводит данные в консоль
        //в случае обращения к несуществующему элементу масива (например masivIntov[5]) мы обращаемся к памяти которая выделена
        // под масив (а памяти у нас 16 байтов) мы обращаемся к 17, 18, 19, 20 байтам, но их нет. Эта память принадлежит другому обьекту.
        //Соответрственно поскольку мы обратились к несуществующему элементу мы получим исключение.

        //Присвоение элементам значения
        //если мы хотим положить какието значения в масив(сохранить в масиве) мы должны присвоить ячейке масива это значение

        masivIntov[1] = 2; // т.е ячейке с индексом 1 масива  мы присваиваем значение 2
        // или в память доступную от 5 до 9го байтов мы записываем двоичное представление двойки и позднее
        // когда мы будем обращатся к этой памяти мы уже будем считывать 2 (в двоичном виде для инта это 00000000 00000000 00000000 00000010)

        // наглядно это выглядит так
        // память выделеная под ячейку масива с индексом 1 имела значение 00000000 00000000 00000000 00000000
        // и мы говорим запиши в эту память 2, в итоге получаем           00000000 00000000 00000000 00000010


        //если нам надо использовать данные из масива не меняя в дальнейшем сам масив мы можем присвоить значение ячейки
        //другой переменной того же типа
        int i = masivIntov[1]; // мы присваиваем переменной типа int значение находящиеся в масиве под индексом 1
        // что происходит с паматью????
        // теперь изменяя значение переменной i мы ни как не влияем на сам масив


    }
}
